// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<App /> render() renders the component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <WeatherApp
    dayarray={
      Array [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday",
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <div
          className="background"
        />,
        <WeatherNavHeader />,
        <WeatherAdvice
          cityName="Brooklyn"
          handleChange={[Function]}
          handleClick={[Function]}
          weatherCity={
            Object {
              "country": "",
              "id": "",
              "name": "",
            }
          }
          weatherToday={
            Object {
              "date": "",
              "dt": "",
              "high_temp": "",
              "low_temp": "",
              "myDay": "",
              "today": false,
              "weather_description": "",
              "weather_icon": "",
            }
          }
        />,
        <WeatherCardContainer
          returnedData={false}
          weatherData={
            Object {
              "city": Object {
                "country": "",
                "id": "",
                "name": "",
              },
              "forecast_weathers": Array [
                Object {
                  "date": "",
                  "dt": "",
                  "high_temp": "",
                  "low_temp": "",
                  "myDay": "",
                  "today": false,
                  "weather_description": "",
                  "weather_icon": "",
                },
              ],
            }
          }
        />,
        <WeatherFooter />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "background",
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "cityName": "Brooklyn",
          "handleChange": [Function],
          "handleClick": [Function],
          "weatherCity": Object {
            "country": "",
            "id": "",
            "name": "",
          },
          "weatherToday": Object {
            "date": "",
            "dt": "",
            "high_temp": "",
            "low_temp": "",
            "myDay": "",
            "today": false,
            "weather_description": "",
            "weather_icon": "",
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "returnedData": false,
          "weatherData": Object {
            "city": Object {
              "country": "",
              "id": "",
              "name": "",
            },
            "forecast_weathers": Array [
              Object {
                "date": "",
                "dt": "",
                "high_temp": "",
                "low_temp": "",
                "myDay": "",
                "today": false,
                "weather_description": "",
                "weather_icon": "",
              },
            ],
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <div
            className="background"
          />,
          <WeatherNavHeader />,
          <WeatherAdvice
            cityName="Brooklyn"
            handleChange={[Function]}
            handleClick={[Function]}
            weatherCity={
              Object {
                "country": "",
                "id": "",
                "name": "",
              }
            }
            weatherToday={
              Object {
                "date": "",
                "dt": "",
                "high_temp": "",
                "low_temp": "",
                "myDay": "",
                "today": false,
                "weather_description": "",
                "weather_icon": "",
              }
            }
          />,
          <WeatherCardContainer
            returnedData={false}
            weatherData={
              Object {
                "city": Object {
                  "country": "",
                  "id": "",
                  "name": "",
                },
                "forecast_weathers": Array [
                  Object {
                    "date": "",
                    "dt": "",
                    "high_temp": "",
                    "low_temp": "",
                    "myDay": "",
                    "today": false,
                    "weather_description": "",
                    "weather_icon": "",
                  },
                ],
              }
            }
          />,
          <WeatherFooter />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "background",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "cityName": "Brooklyn",
            "handleChange": [Function],
            "handleClick": [Function],
            "weatherCity": Object {
              "country": "",
              "id": "",
              "name": "",
            },
            "weatherToday": Object {
              "date": "",
              "dt": "",
              "high_temp": "",
              "low_temp": "",
              "myDay": "",
              "today": false,
              "weather_description": "",
              "weather_icon": "",
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "returnedData": false,
            "weatherData": Object {
              "city": Object {
                "country": "",
                "id": "",
                "name": "",
              },
              "forecast_weathers": Array [
                Object {
                  "date": "",
                  "dt": "",
                  "high_temp": "",
                  "low_temp": "",
                  "myDay": "",
                  "today": false,
                  "weather_description": "",
                  "weather_icon": "",
                },
              ],
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
